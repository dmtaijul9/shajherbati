// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String     @id @default(cuid())
  name     String     @default("")
  email    String     @unique @default("")
  password String
  products Product[]  @relation("Product_user")
  parcel   Parcel[]   @relation("Parcel_user")
  cartItem CartItem[] @relation("CartItem_user")
}

model Product {
  id                    String     @id @default(cuid())
  name                  String     @default("")
  slug                  String     @unique @default("")
  category              String     @default("")
  price                 Float
  brand                 String     @default("")
  rating                Float?     @default(0)
  numReviews            Float?     @default(0)
  countInStock          Float
  description           String     @default("")
  user                  User?      @relation("Product_user", fields: [userId], references: [id])
  userId                String?    @map("user")
  productImg            Image[]    @relation("Product_productImg")
  from_CartItem_product CartItem[] @relation("CartItem_product")

  @@index([userId])
}

model Image {
  id                      String    @id @default(cuid())
  name                    String    @default("")
  altText                 String    @default("")
  image_filesize          Int?
  image_extension         String?
  image_width             Int?
  image_height            Int?
  image_id                String?
  from_Product_productImg Product[] @relation("Product_productImg")
}

model Parcel {
  id             String       @id @default(cuid())
  name           String       @default("")
  address        String       @default("")
  phoneNumber    String       @default("")
  sellPrice      Float
  deliveryCharge Float
  shippingMethod String?      @default("CashOnDelivery")
  status         String?      @default("pending")
  user           User?        @relation("Parcel_user", fields: [userId], references: [id])
  userId         String?      @map("user")
  items          ParcelItem[] @relation("ParcelItem_parcel")

  @@index([userId])
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  product   Product? @relation("CartItem_product", fields: [productId], references: [id])
  productId String?  @map("product")
  user      User?    @relation("CartItem_user", fields: [userId], references: [id])
  userId    String?  @map("user")

  @@index([productId])
  @@index([userId])
}

model ParcelItem {
  id       String  @id @default(cuid())
  name     String  @default("")
  imageUrl String  @default("")
  price    Float
  quantity Float
  parcel   Parcel? @relation("ParcelItem_parcel", fields: [parcelId], references: [id])
  parcelId String? @map("parcel")

  @@index([parcelId])
}