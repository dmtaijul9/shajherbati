// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id         String     @id @default(cuid())
  name       String     @default("")
  email      String     @unique @default("")
  password   String
  products   Product[]  @relation("Product_user")
  parcel     Parcel[]   @relation("Parcel_user")
  userType   String?    @default("reseller")
  bkash      String     @default("")
  fbPageName String     @default("")
  address    String     @default("")
  paymentDue Float?     @default(0)
  withdrawn  Withdraw[] @relation("Withdraw_user")
}

model Product {
  id           String    @id @default(cuid())
  name         String    @default("")
  category     String?   @default("womensFashion")
  price        Float
  brand        String    @default("")
  countInStock Float
  description  String    @default("")
  createdAt    DateTime? @default(now())
  user         User?     @relation("Product_user", fields: [userId], references: [id])
  userId       String?   @map("user")
  productImg   Image[]   @relation("Product_productImg")

  @@index([userId])
}

model Image {
  id                      String    @id @default(cuid())
  image_filesize          Int?
  image_extension         String?
  image_width             Int?
  image_height            Int?
  image_id                String?
  from_Product_productImg Product[] @relation("Product_productImg")
}

model Parcel {
  id             String       @id @default(cuid())
  name           String       @default("")
  address        String       @default("")
  phoneNumber    String       @default("")
  sellPrice      Float
  deliveryCharge Float
  createdAt      DateTime?    @default(now())
  shippingMethod String?      @default("CashOnDelivery")
  status         String?      @default("pending")
  user           User?        @relation("Parcel_user", fields: [userId], references: [id])
  userId         String?      @map("user")
  items          ParcelItem[] @relation("ParcelItem_parcel")

  @@index([userId])
}

model ParcelItem {
  id       String  @id @default(cuid())
  name     String  @default("")
  imageUrl String  @default("")
  price    Float
  quantity Float
  parcel   Parcel? @relation("ParcelItem_parcel", fields: [parcelId], references: [id])
  parcelId String? @map("parcel")

  @@index([parcelId])
}

model Withdraw {
  id           String    @id @default(cuid())
  amount       Float
  bkashNumber  String    @default("")
  status       String?   @default("pending")
  time         DateTime? @default(now())
  transationID String    @default("")
  user         User?     @relation("Withdraw_user", fields: [userId], references: [id])
  userId       String?   @map("user")

  @@index([userId])
}